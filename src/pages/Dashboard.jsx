import { Link } from "react-router-dom";
import Sidebar from "../components/Sidebar";
import { Search, Zap, Award, Calendar, MessageSquare } from 'lucide-react';

// NEW: Import the useAuth hook to get the current user's data
import { useAuth } from "../context/AuthContext";

import "../styles/DashboardPage.css";

// This mock data is now only used for widget content, not user identity
const dashboardData = {
Â  stats: {
Â  Â  upcomingSessions: 2,
Â  Â  pendingRequests: 1,
Â  Â  completedSessions: 4,
Â  },
Â  learningStreak: 5,
Â  achievements: [
Â  Â  { id: 1, name: "First Session Completed", icon: "ðŸ¥‡" },
Â  Â  { id: 2, name: "5 Day Streak", icon: "ðŸ”¥" },
Â  Â  { id: 3, name: "Java Expert", icon: "â˜•" },
Â  ],
Â  upcomingSessions: [
Â  Â  { id: 1, skill: "Advanced React Patterns", teacher: "Harshal Nakade", date: "2025-09-05T14:00:00Z" },
Â  Â  { id: 2, skill: "Acoustic Guitar", teacher: "Santoshi Patil", date: "2025-09-02T18:30:00Z" },
Â  ],
Â  recentMessages: [
Â  Â  { id: 1, name: "Santoshi Patil", message: "Sounds great! See you then.", avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Santoshi" },
Â  Â  { id: 2, name: "Rahul Singh", message: "I've pushed the latest code.", avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Rahul" },
Â  ],
};

const formatDate = (dateString) => {
Â  Â  return new Date(dateString).toLocaleDateString("en-US", { month: 'long', day: 'numeric' });
};

const getGreeting = () => {
Â  Â  const hour = new Date().getHours();
Â  Â  if (hour < 12) return "Good morning";
Â  Â  if (hour < 18) return "Good afternoon";
Â  Â  return "Good evening";
};

export default function Dashboard() {
Â  // NEW: Get the currently logged-in user from the AuthContext
Â  const { currentUser } = useAuth();

Â  const today = new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });
Â  const greeting = getGreeting();
Â  
Â  // A simple loading state while the user data is being fetched
Â  if (!currentUser) {
Â  Â  Â  return (
Â  Â  Â  Â  Â  <div className="dashboard-page-container">
Â  Â  Â  Â  Â  Â  Â  <Sidebar />
Â  Â  Â  Â  Â  Â  Â  <main className="dashboard-main-content">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="loading-state">Loading Dashboard...</div>
Â  Â  Â  Â  Â  Â  Â  </main>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  );
Â  }

Â  return (
Â  Â  <div className="dashboard-page-container">
Â  Â  Â  <Sidebar />
Â  Â  Â  <main className="dashboard-main-content">
Â  Â  Â  Â  <header className="dashboard-header">
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  {/* UPDATED: Displays the logged-in user's name */}
Â  Â  Â  Â  Â  Â  <h1 className="header-title">{greeting}, {currentUser.name}! ðŸ‘‹</h1>
Â  Â  Â  Â  Â  Â  <p className="header-subtitle">It's {today}. Let's make today productive.</p>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div className="header-actions">
Â  Â  Â  Â  Â  Â  <div className="search-bar">
Â  Â  Â  Â  Â  Â  Â  Â  <Search className="search-icon" size={20}/>
Â  Â  Â  Â  Â  Â  Â  Â  <input type="text" placeholder="Search skills, mentors..." />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  {/* UPDATED: Button is now role-based */}
Â  Â  Â  Â  Â  Â  {currentUser.roles.includes('learner') && (
Â  Â  Â  Â  Â  Â  Â  Â  Â <Link to="/skills" className="btn-primary">Request a Session</Link>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </header>

Â  Â  Â  Â  <div className="stats-grid">
Â  Â  Â  Â  Â  {/* These widgets still use mock data for now */}
Â  Â  Â  Â  Â  <div className="stat-card">
Â  Â  Â  Â  Â  Â  <div className="stat-icon upcoming">ðŸ“…</div>
Â  Â  Â  Â  Â  Â  <div className="stat-info"><span className="stat-value">{dashboardData.stats.upcomingSessions}</span><span className="stat-label">Upcoming Sessions</span></div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div className="stat-card">
Â  Â  Â  Â  Â  Â  <div className="stat-icon pending">ðŸ””</div>
Â  Â  Â  Â  Â  Â  <div className="stat-info"><span className="stat-value">{dashboardData.stats.pendingRequests}</span><span className="stat-label">Pending Requests</span></div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div className="stat-card">
Â  Â  Â  Â  Â  Â  <div className="stat-icon completed">âœ…</div>
Â  Â  Â  Â  Â  Â  <div className="stat-info"><span className="stat-value">{dashboardData.stats.completedSessions}</span><span className="stat-label">Completed Sessions</span></div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div className="dashboard-grid">
Â  Â  Â  Â  Â  <div className="widget-card upcoming-sessions">
Â  Â  Â  Â  Â  Â  <h3 className="widget-title"><Calendar size={20}/> Upcoming Sessions</h3>
Â  Â  Â  Â  Â  Â  <div className="widget-list">
Â  Â  Â  Â  Â  Â  Â  {dashboardData.upcomingSessions.map(session => (
Â  Â  Â  Â  Â  Â  Â  Â  <div key={session.id} className="list-item">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="item-details">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="item-title">{session.skill}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="item-subtitle">with {session.teacher}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="item-meta">{formatDate(session.date)}</span>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  <div className="widget-card gamification">
Â  Â  Â  Â  Â  Â  <div className="streak-widget">
Â  Â  Â  Â  Â  Â  Â  Â  <Zap size={24} className="streak-icon"/>
Â  Â  Â  Â  Â  Â  Â  Â  <div className="streak-info">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="stat-value">{dashboardData.learningStreak} Days</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="stat-label">Learning Streak</span>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <div className="achievements-widget">
Â  Â  Â  Â  Â  Â  Â  Â  <h4 className="widget-subtitle"><Award size={18}/> Achievements</h4>
Â  Â  Â  Â  Â  Â  Â  Â  <div className="achievements-list">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {dashboardData.achievements.map(ach => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div key={ach.id} className="achievement-badge" title={ach.name}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {ach.icon}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  <div className="widget-card recent-messages">
Â  Â  Â  Â  Â  Â  <h3 className="widget-title"><MessageSquare size={20}/> Recent Messages</h3>
Â  Â  Â  Â  Â  Â  <div className="widget-list">
Â  Â  Â  Â  Â  Â  Â  Â  {dashboardData.recentMessages.map(msg => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/messages" key={msg.id} className="list-item message-item">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <img src={msg.avatar} alt={msg.name} className="item-avatar"/>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="item-details">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="item-title">{msg.name}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="item-subtitle">{msg.message}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  <div className="widget-card action-card-container">
            {/* UPDATED: Action cards are now role-based */}
Â  Â  Â  Â  Â  Â  {currentUser.roles.includes('learner') && (
Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/skills" className="action-card find-skill">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h3>Find a Mentor</h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p>Explore skills taught by experts.</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button className="btn-secondary">Explore Now</button>
Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  {currentUser.roles.includes('teacher') && (
Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/offer-skill" className="action-card offer-skill">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h3>Offer Your Skill</h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p>Share your knowledge with others.</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button className="btn-secondary">Get Started</button>
Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </main>
Â  Â  </div>
Â  );
}